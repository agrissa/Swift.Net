//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Swift.Net.Mt.Category5
{
    using System;
    using System.Collections.Generic;
    using System.Linq;


    /// <summary>
    /// MT517 (SRG 2019)
    /// <summary>
    public partial class MT517 : SwiftMessage
    {

        public override SwiftBlock4 Block4 { get => new SwiftBlock4(GetBlock4Tags()); set => SetBlock4Tags(value); }

        /// <summary>
        /// General Information
        /// <summary>
		public MT517_SequenceA SequenceA { get; set; }

        public MT517()
        {
        }

        public MT517(SwiftTagList tags)
        {
            SetBlock4Tags(tags);
        }

        public virtual SwiftTagList GetBlock4Tags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (SequenceA != null)
                tags.AddRange(SequenceA.GetTags());
            return tags;
        }

        public virtual void SetBlock4Tags(SwiftTagList tags)
        {
            SequenceA = MT517_SequenceA.GetMT517_SequenceA(tags);
        }

        public static MT517 Parse(string message)
        {
            SwiftMessage swiftMessage = new SwiftParser().GetSwiftMessage(message);
            MT517 result = new MT517()
            {
                Block1 = swiftMessage.Block1,
                Block2 = swiftMessage.Block2,
                Block3 = swiftMessage.Block3,
                Block4 = swiftMessage.Block4,
                Block5 = swiftMessage.Block5,
            };
            return result;
        }

        public static string Write(MT517 message)
        {
            return new SwiftWriter().GetFinMessage(message);
        }
    }

    /// <summary>
    /// General Information
    /// <summary>
    public partial class MT517_SequenceA
    {

        public static readonly string Tag16R_StartOfBlock_Value = "GENL";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Senders Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        /// <summary>
        /// Function Of the Message
        /// <summary>
		public string Tag23G_FunctionOfTheMessage { get; set; }
        /// <summary>
        /// Preparation Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Preparation Date
        /// <summary>
		public string Tag98C_DateTime { get; set; }
        /// <summary>
        /// Trade Date/Time
        /// <summary>
		public string Tag98E_DateTime { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95Q_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95L_Party { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag25D_StatusCode { get; set; }
        /// <summary>
        /// Linkages
        /// <summary>
		public List<MT517_SequenceA1> SequenceA1List { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "GENL";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT517_SequenceA()
        {
        }

        public MT517_SequenceA(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag23G_FunctionOfTheMessage != null)
                tags.Add(new SwiftTag("23G", Tag23G_FunctionOfTheMessage));
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag98C_DateTime != null)
                tags.Add(new SwiftTag("98C", Tag98C_DateTime));
            if (Tag98E_DateTime != null)
                tags.Add(new SwiftTag("98E", Tag98E_DateTime));
            if (Tag95P_Party != null)
                tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
            if (Tag95R_Party != null)
                tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
            if (Tag95Q_Party != null)
                tags.AddRange(Tag95Q_Party.Select(x => new SwiftTag("95Q", x)).ToList());
            if (Tag95L_Party != null)
                tags.AddRange(Tag95L_Party.Select(x => new SwiftTag("95L", x)).ToList());
            if (Tag25D_StatusCode != null)
                tags.Add(new SwiftTag("25D", Tag25D_StatusCode));
            if (SequenceA1List != null)
                tags.AddRange(SequenceA1List.SelectMany(x => x.GetTags()).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "20C") && (i <= 2))
                {
                    Tag20C_Reference = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "23G") && (i <= 3))
                {
                    Tag23G_FunctionOfTheMessage = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98C") && (i <= 4))
                {
                    Tag98C_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98E") && (i <= 4))
                {
                    Tag98E_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "95P") && (i <= 5))
                {
                    if (Tag95P_Party == null)
                        Tag95P_Party = new List<string>();
                    Tag95P_Party.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "95R") && (i <= 5))
                {
                    if (Tag95R_Party == null)
                        Tag95R_Party = new List<string>();
                    Tag95R_Party.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "95Q") && (i <= 5))
                {
                    if (Tag95Q_Party == null)
                        Tag95Q_Party = new List<string>();
                    Tag95Q_Party.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "95L") && (i <= 5))
                {
                    if (Tag95L_Party == null)
                        Tag95L_Party = new List<string>();
                    Tag95L_Party.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "25D") && (i <= 6))
                {
                    Tag25D_StatusCode = tag.Value;
                    i = 6;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 7))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 7;
                }
            }
            SequenceA1List = MT517_SequenceA1.GetMT517_SequenceA1List(tags);
        }

        public static MT517_SequenceA GetMT517_SequenceA(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT517_SequenceA.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT517_SequenceA.Tag16S_EndOfBlock_Value));
            return new MT517_SequenceA(subBlock);
        }
    }

    /// <summary>
    /// Linkages
    /// <summary>
    public partial class MT517_SequenceA1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "LINK";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20U_Reference { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "LINK";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT517_SequenceA1()
        {
        }

        public MT517_SequenceA1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag13A_NumberIdentification != null)
                tags.Add(new SwiftTag("13A", Tag13A_NumberIdentification));
            if (Tag13B_NumberIdentification != null)
                tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag20U_Reference != null)
                tags.Add(new SwiftTag("20U", Tag20U_Reference));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "13A") && (i <= 2))
                {
                    Tag13A_NumberIdentification = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "13B") && (i <= 2))
                {
                    Tag13B_NumberIdentification = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "20C") && (i <= 3))
                {
                    Tag20C_Reference = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "20U") && (i <= 3))
                {
                    Tag20U_Reference = tag.Value;
                    i = 3;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 4;
                }
            }
        }

        public static List<MT517_SequenceA1> GetMT517_SequenceA1List(SwiftTagList tags)
        {
            List<MT517_SequenceA1> result = new List<MT517_SequenceA1>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT517_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT517_SequenceA1.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT517_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT517_SequenceA1.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT517_SequenceA1 sequence = new MT517_SequenceA1(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }
}
