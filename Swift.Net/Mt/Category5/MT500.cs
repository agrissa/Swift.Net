//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Swift.Net.Mt.Category5
{
    using System;
    using System.Collections.Generic;
    using System.Linq;


    /// <summary>
    /// MT500 (SRG 2019)
    /// <summary>
    public partial class MT500 : SwiftMessage
    {

        public override SwiftBlock4 Block4 { get => new SwiftBlock4(GetBlock4Tags()); set => SetBlock4Tags(value); }

        /// <summary>
        /// General Information
        /// <summary>
		public MT500_SequenceA SequenceA { get; set; }
        /// <summary>
        /// Registration Details
        /// <summary>
		public MT500_SequenceB SequenceB { get; set; }
        /// <summary>
        /// Client Details
        /// <summary>
		public List<MT500_SequenceC> SequenceCList { get; set; }
        /// <summary>
        /// Corporate Action Details
        /// <summary>
		public MT500_SequenceD SequenceD { get; set; }
        /// <summary>
        /// Additional Information
        /// <summary>
		public MT500_SequenceE SequenceE { get; set; }

        public MT500()
        {
        }

        public MT500(SwiftTagList tags)
        {
            SetBlock4Tags(tags);
        }

        public virtual SwiftTagList GetBlock4Tags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (SequenceA != null)
                tags.AddRange(SequenceA.GetTags());
            if (SequenceB != null)
                tags.AddRange(SequenceB.GetTags());
            if (SequenceCList != null)
                tags.AddRange(SequenceCList.SelectMany(x => x.GetTags()).ToList());
            if (SequenceD != null)
                tags.AddRange(SequenceD.GetTags());
            if (SequenceE != null)
                tags.AddRange(SequenceE.GetTags());
            return tags;
        }

        public virtual void SetBlock4Tags(SwiftTagList tags)
        {
            SequenceA = MT500_SequenceA.GetMT500_SequenceA(tags);
            SequenceB = MT500_SequenceB.GetMT500_SequenceB(tags);
            SequenceCList = MT500_SequenceC.GetMT500_SequenceCList(tags);
            SequenceD = MT500_SequenceD.GetMT500_SequenceD(tags);
            SequenceE = MT500_SequenceE.GetMT500_SequenceE(tags);
        }

        public static MT500 Parse(string message)
        {
            SwiftMessage swiftMessage = new SwiftParser().GetSwiftMessage(message);
            MT500 result = new MT500()
            {
                Block1 = swiftMessage.Block1,
                Block2 = swiftMessage.Block2,
                Block3 = swiftMessage.Block3,
                Block4 = swiftMessage.Block4,
                Block5 = swiftMessage.Block5,
            };
            return result;
        }

        public static string Write(MT500 message)
        {
            return new SwiftWriter().GetFinMessage(message);
        }
    }

    /// <summary>
    /// General Information
    /// <summary>
    public partial class MT500_SequenceA
    {

        public static readonly string Tag16R_StartOfBlock_Value = "GENL";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Sender’s Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        /// <summary>
        /// Function of the Message
        /// <summary>
		public string Tag23G_FunctionOfTheMessage { get; set; }
        /// <summary>
        /// Preparation Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Preparation Date/Time
        /// <summary>
		public string Tag98C_DateTime { get; set; }
        /// <summary>
        /// Trade Date/Time
        /// <summary>
		public string Tag98E_DateTime { get; set; }
        /// <summary>
        /// Type of Instruction Indicator
        /// <summary>
		public string Tag22F_Indicator { get; set; }
        /// <summary>
        /// Linkages
        /// <summary>
		public List<MT500_SequenceA1> SequenceA1List { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "GENL";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceA()
        {
        }

        public MT500_SequenceA(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag23G_FunctionOfTheMessage != null)
                tags.Add(new SwiftTag("23G", Tag23G_FunctionOfTheMessage));
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag98C_DateTime != null)
                tags.Add(new SwiftTag("98C", Tag98C_DateTime));
            if (Tag98E_DateTime != null)
                tags.Add(new SwiftTag("98E", Tag98E_DateTime));
            if (Tag22F_Indicator != null)
                tags.Add(new SwiftTag("22F", Tag22F_Indicator));
            if (SequenceA1List != null)
                tags.AddRange(SequenceA1List.SelectMany(x => x.GetTags()).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "20C") && (i <= 2))
                {
                    Tag20C_Reference = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "23G") && (i <= 3))
                {
                    Tag23G_FunctionOfTheMessage = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98C") && (i <= 4))
                {
                    Tag98C_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98E") && (i <= 4))
                {
                    Tag98E_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "22F") && (i <= 5))
                {
                    Tag22F_Indicator = tag.Value;
                    i = 5;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 6))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 6;
                }
            }
            SequenceA1List = MT500_SequenceA1.GetMT500_SequenceA1List(tags);
        }

        public static MT500_SequenceA GetMT500_SequenceA(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceA.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceA.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceA(subBlock);
        }
    }

    /// <summary>
    /// Linkages
    /// <summary>
    public partial class MT500_SequenceA1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "LINK";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linkage Type Indicator
        /// <summary>
		public string Tag22F_Indicator { get; set; }
        /// <summary>
        /// Linked Transaction
        /// <summary>
		public string Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "LINK";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceA1()
        {
        }

        public MT500_SequenceA1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag22F_Indicator != null)
                tags.Add(new SwiftTag("22F", Tag22F_Indicator));
            if (Tag13A_NumberIdentification != null)
                tags.Add(new SwiftTag("13A", Tag13A_NumberIdentification));
            if (Tag13B_NumberIdentification != null)
                tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "22F") && (i <= 2))
                {
                    Tag22F_Indicator = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "13A") && (i <= 3))
                {
                    Tag13A_NumberIdentification = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "13B") && (i <= 3))
                {
                    Tag13B_NumberIdentification = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "20C") && (i <= 4))
                {
                    Tag20C_Reference = tag.Value;
                    i = 4;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 5))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 5;
                }
            }
        }

        public static List<MT500_SequenceA1> GetMT500_SequenceA1List(SwiftTagList tags)
        {
            List<MT500_SequenceA1> result = new List<MT500_SequenceA1>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT500_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceA1.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT500_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceA1.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT500_SequenceA1 sequence = new MT500_SequenceA1(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }

    /// <summary>
    /// Registration Details
    /// <summary>
    public partial class MT500_SequenceB
    {

        public static readonly string Tag16R_StartOfBlock_Value = "REGDET";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public List<string> Tag20D_Reference { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Requested Registration Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Requested Registration Date/Time
        /// <summary>
		public string Tag98C_DateTime { get; set; }
        /// <summary>
        /// Identification of the Financial Instrument
        /// <summary>
		public string Tag35B_IdentificationOfFinancialInstrument { get; set; }
        /// <summary>
        /// Registration Details
        /// <summary>
		public string Tag70C_Narrative { get; set; }
        /// <summary>
        /// Financial Instrument Attributes
        /// <summary>
		public MT500_SequenceB1 SequenceB1 { get; set; }
        /// <summary>
        /// Financial Instrument/Account
        /// <summary>
		public MT500_SequenceB2 SequenceB2 { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "REGDET";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceB()
        {
        }

        public MT500_SequenceB(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag20D_Reference != null)
                tags.AddRange(Tag20D_Reference.Select(x => new SwiftTag("20D", x)).ToList());
            if (Tag22F_Indicator != null)
                tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag98C_DateTime != null)
                tags.Add(new SwiftTag("98C", Tag98C_DateTime));
            if (Tag35B_IdentificationOfFinancialInstrument != null)
                tags.Add(new SwiftTag("35B", Tag35B_IdentificationOfFinancialInstrument));
            if (Tag70C_Narrative != null)
                tags.Add(new SwiftTag("70C", Tag70C_Narrative));
            if (SequenceB1 != null)
                tags.AddRange(SequenceB1.GetTags());
            if (SequenceB2 != null)
                tags.AddRange(SequenceB2.GetTags());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "20D") && (i <= 2))
                {
                    if (Tag20D_Reference == null)
                        Tag20D_Reference = new List<string>();
                    Tag20D_Reference.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "22F") && (i <= 3))
                {
                    if (Tag22F_Indicator == null)
                        Tag22F_Indicator = new List<string>();
                    Tag22F_Indicator.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98C") && (i <= 4))
                {
                    Tag98C_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "35B") && (i <= 5))
                {
                    Tag35B_IdentificationOfFinancialInstrument = tag.Value;
                    i = 5;
                }
                else if ((tag.Name == "70C") && (i <= 6))
                {
                    Tag70C_Narrative = tag.Value;
                    i = 6;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 7))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 7;
                }
            }
            SequenceB1 = MT500_SequenceB1.GetMT500_SequenceB1(tags);
            SequenceB2 = MT500_SequenceB2.GetMT500_SequenceB2(tags);
        }

        public static MT500_SequenceB GetMT500_SequenceB(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceB.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceB.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceB(subBlock);
        }
    }

    /// <summary>
    /// Financial Instrument Attributes
    /// <summary>
    public partial class MT500_SequenceB1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "FIA";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Place
        /// <summary>
		public string Tag94B_Place { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12A_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12B_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12C_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Currency of Denomination
        /// <summary>
		public string Tag11A_Currency { get; set; }
        /// <summary>
        /// Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Rate
        /// <summary>
		public List<string> Tag92A_Rate { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Flag
        /// <summary>
		public List<string> Tag17B_Flag { get; set; }
        /// <summary>
        /// Price
        /// <summary>
		public List<string> Tag90A_Price { get; set; }
        /// <summary>
        /// Price
        /// <summary>
		public List<string> Tag90B_Price { get; set; }
        /// <summary>
        /// Quantity of Financial Instrument
        /// <summary>
		public List<string> Tag36B_QuantityOfFinancialInstrument { get; set; }
        /// <summary>
        /// Financial Instrument Attribute Narrative
        /// <summary>
		public string Tag70E_Narrative { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "FIA";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceB1()
        {
        }

        public MT500_SequenceB1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag94B_Place != null)
                tags.Add(new SwiftTag("94B", Tag94B_Place));
            if (Tag22F_Indicator != null)
                tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
            if (Tag12A_TypeOfFinancialInstrument != null)
                tags.AddRange(Tag12A_TypeOfFinancialInstrument.Select(x => new SwiftTag("12A", x)).ToList());
            if (Tag12B_TypeOfFinancialInstrument != null)
                tags.AddRange(Tag12B_TypeOfFinancialInstrument.Select(x => new SwiftTag("12B", x)).ToList());
            if (Tag12C_TypeOfFinancialInstrument != null)
                tags.AddRange(Tag12C_TypeOfFinancialInstrument.Select(x => new SwiftTag("12C", x)).ToList());
            if (Tag11A_Currency != null)
                tags.Add(new SwiftTag("11A", Tag11A_Currency));
            if (Tag98A_Date != null)
                tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
            if (Tag92A_Rate != null)
                tags.AddRange(Tag92A_Rate.Select(x => new SwiftTag("92A", x)).ToList());
            if (Tag13A_NumberIdentification != null)
                tags.AddRange(Tag13A_NumberIdentification.Select(x => new SwiftTag("13A", x)).ToList());
            if (Tag13B_NumberIdentification != null)
                tags.AddRange(Tag13B_NumberIdentification.Select(x => new SwiftTag("13B", x)).ToList());
            if (Tag17B_Flag != null)
                tags.AddRange(Tag17B_Flag.Select(x => new SwiftTag("17B", x)).ToList());
            if (Tag90A_Price != null)
                tags.AddRange(Tag90A_Price.Select(x => new SwiftTag("90A", x)).ToList());
            if (Tag90B_Price != null)
                tags.AddRange(Tag90B_Price.Select(x => new SwiftTag("90B", x)).ToList());
            if (Tag36B_QuantityOfFinancialInstrument != null)
                tags.AddRange(Tag36B_QuantityOfFinancialInstrument.Select(x => new SwiftTag("36B", x)).ToList());
            if (Tag70E_Narrative != null)
                tags.Add(new SwiftTag("70E", Tag70E_Narrative));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "94B") && (i <= 2))
                {
                    Tag94B_Place = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "22F") && (i <= 3))
                {
                    if (Tag22F_Indicator == null)
                        Tag22F_Indicator = new List<string>();
                    Tag22F_Indicator.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "12A") && (i <= 4))
                {
                    if (Tag12A_TypeOfFinancialInstrument == null)
                        Tag12A_TypeOfFinancialInstrument = new List<string>();
                    Tag12A_TypeOfFinancialInstrument.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "12B") && (i <= 4))
                {
                    if (Tag12B_TypeOfFinancialInstrument == null)
                        Tag12B_TypeOfFinancialInstrument = new List<string>();
                    Tag12B_TypeOfFinancialInstrument.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "12C") && (i <= 4))
                {
                    if (Tag12C_TypeOfFinancialInstrument == null)
                        Tag12C_TypeOfFinancialInstrument = new List<string>();
                    Tag12C_TypeOfFinancialInstrument.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "11A") && (i <= 5))
                {
                    Tag11A_Currency = tag.Value;
                    i = 5;
                }
                else if ((tag.Name == "98A") && (i <= 6))
                {
                    if (Tag98A_Date == null)
                        Tag98A_Date = new List<string>();
                    Tag98A_Date.Add(tag.Value);
                    i = 6;
                }
                else if ((tag.Name == "92A") && (i <= 7))
                {
                    if (Tag92A_Rate == null)
                        Tag92A_Rate = new List<string>();
                    Tag92A_Rate.Add(tag.Value);
                    i = 7;
                }
                else if ((tag.Name == "13A") && (i <= 8))
                {
                    if (Tag13A_NumberIdentification == null)
                        Tag13A_NumberIdentification = new List<string>();
                    Tag13A_NumberIdentification.Add(tag.Value);
                    i = 8;
                }
                else if ((tag.Name == "13B") && (i <= 8))
                {
                    if (Tag13B_NumberIdentification == null)
                        Tag13B_NumberIdentification = new List<string>();
                    Tag13B_NumberIdentification.Add(tag.Value);
                    i = 8;
                }
                else if ((tag.Name == "17B") && (i <= 9))
                {
                    if (Tag17B_Flag == null)
                        Tag17B_Flag = new List<string>();
                    Tag17B_Flag.Add(tag.Value);
                    i = 9;
                }
                else if ((tag.Name == "90A") && (i <= 10))
                {
                    if (Tag90A_Price == null)
                        Tag90A_Price = new List<string>();
                    Tag90A_Price.Add(tag.Value);
                    i = 10;
                }
                else if ((tag.Name == "90B") && (i <= 10))
                {
                    if (Tag90B_Price == null)
                        Tag90B_Price = new List<string>();
                    Tag90B_Price.Add(tag.Value);
                    i = 10;
                }
                else if ((tag.Name == "36B") && (i <= 11))
                {
                    if (Tag36B_QuantityOfFinancialInstrument == null)
                        Tag36B_QuantityOfFinancialInstrument = new List<string>();
                    Tag36B_QuantityOfFinancialInstrument.Add(tag.Value);
                    i = 11;
                }
                else if ((tag.Name == "70E") && (i <= 12))
                {
                    Tag70E_Narrative = tag.Value;
                    i = 12;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 13))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 13;
                }
            }
        }

        public static MT500_SequenceB1 GetMT500_SequenceB1(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceB1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceB1.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceB1(subBlock);
        }
    }

    /// <summary>
    /// Financial Instrument/Account
    /// <summary>
    public partial class MT500_SequenceB2
    {

        public static readonly string Tag16R_StartOfBlock_Value = "FIAC";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Quantity of Financial Instrument to be Registered
        /// <summary>
		public string Tag36B_QuantityOfFinancialInstrument { get; set; }
        /// <summary>
        /// Account Owner
        /// <summary>
		public string Tag95P_Party { get; set; }
        /// <summary>
        /// Account Owner
        /// <summary>
		public string Tag95R_Party { get; set; }
        /// <summary>
        /// Safekeeping Account
        /// <summary>
		public string Tag97A_Account { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "FIAC";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceB2()
        {
        }

        public MT500_SequenceB2(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag36B_QuantityOfFinancialInstrument != null)
                tags.Add(new SwiftTag("36B", Tag36B_QuantityOfFinancialInstrument));
            if (Tag95P_Party != null)
                tags.Add(new SwiftTag("95P", Tag95P_Party));
            if (Tag95R_Party != null)
                tags.Add(new SwiftTag("95R", Tag95R_Party));
            if (Tag97A_Account != null)
                tags.Add(new SwiftTag("97A", Tag97A_Account));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "36B") && (i <= 2))
                {
                    Tag36B_QuantityOfFinancialInstrument = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "95P") && (i <= 3))
                {
                    Tag95P_Party = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "95R") && (i <= 3))
                {
                    Tag95R_Party = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "97A") && (i <= 4))
                {
                    Tag97A_Account = tag.Value;
                    i = 4;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 5))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 5;
                }
            }
        }

        public static MT500_SequenceB2 GetMT500_SequenceB2(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceB2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceB2.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceB2(subBlock);
        }
    }

    /// <summary>
    /// Client Details
    /// <summary>
    public partial class MT500_SequenceC
    {

        public static readonly string Tag16R_StartOfBlock_Value = "CLTDET";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Address
        /// <summary>
		public MT500_SequenceC1 SequenceC1 { get; set; }
        /// <summary>
        /// Personal Details
        /// <summary>
		public MT500_SequenceC2 SequenceC2 { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "CLTDET";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceC()
        {
        }

        public MT500_SequenceC(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (SequenceC1 != null)
                tags.AddRange(SequenceC1.GetTags());
            if (SequenceC2 != null)
                tags.AddRange(SequenceC2.GetTags());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 2))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 2;
                }
            }
            SequenceC1 = MT500_SequenceC1.GetMT500_SequenceC1(tags);
            SequenceC2 = MT500_SequenceC2.GetMT500_SequenceC2(tags);
        }

        public static List<MT500_SequenceC> GetMT500_SequenceCList(SwiftTagList tags)
        {
            List<MT500_SequenceC> result = new List<MT500_SequenceC>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT500_SequenceC.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceC.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT500_SequenceC.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceC.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT500_SequenceC sequence = new MT500_SequenceC(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }

    /// <summary>
    /// Address
    /// <summary>
    public partial class MT500_SequenceC1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "ADDRESS";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Flag
        /// <summary>
		public string Tag17B_Flag { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95S_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95U_Party { get; set; }
        /// <summary>
        /// Place
        /// <summary>
		public List<string> Tag94C_Place { get; set; }
        /// <summary>
        /// Place
        /// <summary>
		public List<string> Tag94D_Place { get; set; }
        /// <summary>
        /// Place
        /// <summary>
		public List<string> Tag94G_Place { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Narrative
        /// <summary>
		public List<string> Tag70C_Narrative { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "ADDRESS";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceC1()
        {
        }

        public MT500_SequenceC1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag17B_Flag != null)
                tags.Add(new SwiftTag("17B", Tag17B_Flag));
            if (Tag22F_Indicator != null)
                tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
            if (Tag95P_Party != null)
                tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
            if (Tag95R_Party != null)
                tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
            if (Tag95S_Party != null)
                tags.AddRange(Tag95S_Party.Select(x => new SwiftTag("95S", x)).ToList());
            if (Tag95U_Party != null)
                tags.AddRange(Tag95U_Party.Select(x => new SwiftTag("95U", x)).ToList());
            if (Tag94C_Place != null)
                tags.AddRange(Tag94C_Place.Select(x => new SwiftTag("94C", x)).ToList());
            if (Tag94D_Place != null)
                tags.AddRange(Tag94D_Place.Select(x => new SwiftTag("94D", x)).ToList());
            if (Tag94G_Place != null)
                tags.AddRange(Tag94G_Place.Select(x => new SwiftTag("94G", x)).ToList());
            if (Tag13B_NumberIdentification != null)
                tags.AddRange(Tag13B_NumberIdentification.Select(x => new SwiftTag("13B", x)).ToList());
            if (Tag70C_Narrative != null)
                tags.AddRange(Tag70C_Narrative.Select(x => new SwiftTag("70C", x)).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "17B") && (i <= 2))
                {
                    Tag17B_Flag = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "22F") && (i <= 3))
                {
                    if (Tag22F_Indicator == null)
                        Tag22F_Indicator = new List<string>();
                    Tag22F_Indicator.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "95P") && (i <= 4))
                {
                    if (Tag95P_Party == null)
                        Tag95P_Party = new List<string>();
                    Tag95P_Party.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "95R") && (i <= 4))
                {
                    if (Tag95R_Party == null)
                        Tag95R_Party = new List<string>();
                    Tag95R_Party.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "95S") && (i <= 4))
                {
                    if (Tag95S_Party == null)
                        Tag95S_Party = new List<string>();
                    Tag95S_Party.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "95U") && (i <= 4))
                {
                    if (Tag95U_Party == null)
                        Tag95U_Party = new List<string>();
                    Tag95U_Party.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "94C") && (i <= 5))
                {
                    if (Tag94C_Place == null)
                        Tag94C_Place = new List<string>();
                    Tag94C_Place.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "94D") && (i <= 5))
                {
                    if (Tag94D_Place == null)
                        Tag94D_Place = new List<string>();
                    Tag94D_Place.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "94G") && (i <= 5))
                {
                    if (Tag94G_Place == null)
                        Tag94G_Place = new List<string>();
                    Tag94G_Place.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "13B") && (i <= 6))
                {
                    if (Tag13B_NumberIdentification == null)
                        Tag13B_NumberIdentification = new List<string>();
                    Tag13B_NumberIdentification.Add(tag.Value);
                    i = 6;
                }
                else if ((tag.Name == "70C") && (i <= 7))
                {
                    if (Tag70C_Narrative == null)
                        Tag70C_Narrative = new List<string>();
                    Tag70C_Narrative.Add(tag.Value);
                    i = 7;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 8))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 8;
                }
            }
        }

        public static MT500_SequenceC1 GetMT500_SequenceC1(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceC1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceC1.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceC1(subBlock);
        }
    }

    /// <summary>
    /// Personal Details
    /// <summary>
    public partial class MT500_SequenceC2
    {

        public static readonly string Tag16R_StartOfBlock_Value = "PERSDET";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public string Tag22F_Indicator { get; set; }
        /// <summary>
        /// Name at Birth
        /// <summary>
		public string Tag95U_Party { get; set; }
        /// <summary>
        /// Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Date/Time
        /// <summary>
		public List<string> Tag98C_DateTime { get; set; }
        /// <summary>
        /// Place
        /// <summary>
		public List<string> Tag94C_Place { get; set; }
        /// <summary>
        /// Additional Text
        /// <summary>
		public string Tag70C_Narrative { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "PERSDET";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceC2()
        {
        }

        public MT500_SequenceC2(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag22F_Indicator != null)
                tags.Add(new SwiftTag("22F", Tag22F_Indicator));
            if (Tag95U_Party != null)
                tags.Add(new SwiftTag("95U", Tag95U_Party));
            if (Tag98A_Date != null)
                tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
            if (Tag98C_DateTime != null)
                tags.AddRange(Tag98C_DateTime.Select(x => new SwiftTag("98C", x)).ToList());
            if (Tag94C_Place != null)
                tags.AddRange(Tag94C_Place.Select(x => new SwiftTag("94C", x)).ToList());
            if (Tag70C_Narrative != null)
                tags.Add(new SwiftTag("70C", Tag70C_Narrative));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "22F") && (i <= 2))
                {
                    Tag22F_Indicator = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "95U") && (i <= 3))
                {
                    Tag95U_Party = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    if (Tag98A_Date == null)
                        Tag98A_Date = new List<string>();
                    Tag98A_Date.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "98C") && (i <= 4))
                {
                    if (Tag98C_DateTime == null)
                        Tag98C_DateTime = new List<string>();
                    Tag98C_DateTime.Add(tag.Value);
                    i = 4;
                }
                else if ((tag.Name == "94C") && (i <= 5))
                {
                    if (Tag94C_Place == null)
                        Tag94C_Place = new List<string>();
                    Tag94C_Place.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "70C") && (i <= 6))
                {
                    Tag70C_Narrative = tag.Value;
                    i = 6;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 7))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 7;
                }
            }
        }

        public static MT500_SequenceC2 GetMT500_SequenceC2(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceC2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceC2.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceC2(subBlock);
        }
    }

    /// <summary>
    /// Corporate Action Details
    /// <summary>
    public partial class MT500_SequenceD
    {

        public static readonly string Tag16R_StartOfBlock_Value = "CADETL";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Date/Time
        /// <summary>
		public List<string> Tag98C_DateTime { get; set; }
        /// <summary>
        /// Identification of the Financial Instrument
        /// <summary>
		public string Tag35B_IdentificationOfFinancialInstrument { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "CADETL";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceD()
        {
        }

        public MT500_SequenceD(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag98A_Date != null)
                tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
            if (Tag98C_DateTime != null)
                tags.AddRange(Tag98C_DateTime.Select(x => new SwiftTag("98C", x)).ToList());
            if (Tag35B_IdentificationOfFinancialInstrument != null)
                tags.Add(new SwiftTag("35B", Tag35B_IdentificationOfFinancialInstrument));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "98A") && (i <= 2))
                {
                    if (Tag98A_Date == null)
                        Tag98A_Date = new List<string>();
                    Tag98A_Date.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "98C") && (i <= 2))
                {
                    if (Tag98C_DateTime == null)
                        Tag98C_DateTime = new List<string>();
                    Tag98C_DateTime.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "35B") && (i <= 3))
                {
                    Tag35B_IdentificationOfFinancialInstrument = tag.Value;
                    i = 3;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 4;
                }
            }
        }

        public static MT500_SequenceD GetMT500_SequenceD(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceD.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceD.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceD(subBlock);
        }
    }

    /// <summary>
    /// Additional Information
    /// <summary>
    public partial class MT500_SequenceE
    {

        public static readonly string Tag16R_StartOfBlock_Value = "ADDINFO";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95Q_Party { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "ADDINFO";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT500_SequenceE()
        {
        }

        public MT500_SequenceE(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag95P_Party != null)
                tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
            if (Tag95R_Party != null)
                tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
            if (Tag95Q_Party != null)
                tags.AddRange(Tag95Q_Party.Select(x => new SwiftTag("95Q", x)).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "95P") && (i <= 2))
                {
                    if (Tag95P_Party == null)
                        Tag95P_Party = new List<string>();
                    Tag95P_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "95R") && (i <= 2))
                {
                    if (Tag95R_Party == null)
                        Tag95R_Party = new List<string>();
                    Tag95R_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "95Q") && (i <= 2))
                {
                    if (Tag95Q_Party == null)
                        Tag95Q_Party = new List<string>();
                    Tag95Q_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 3))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 3;
                }
            }
        }

        public static MT500_SequenceE GetMT500_SequenceE(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT500_SequenceE.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT500_SequenceE.Tag16S_EndOfBlock_Value));
            return new MT500_SequenceE(subBlock);
        }
    }
}
