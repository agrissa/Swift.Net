//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Swift.Net.Mt.Category5
{
    using System;
    using System.Collections.Generic;
    using System.Linq;


    /// <summary>
    /// MT503 (SRG 2019)
    /// <summary>
    public partial class MT503 : SwiftMessage
    {

        public override SwiftBlock4 Block4 { get => new SwiftBlock4(GetBlock4Tags()); set => SetBlock4Tags(value); }

        /// <summary>
        /// General Information
        /// <summary>
		public MT503_SequenceA SequenceA { get; set; }
        /// <summary>
        /// Summary
        /// <summary>
		public MT503_SequenceB SequenceB { get; set; }
        /// <summary>
        /// Collateral Details
        /// <summary>
		public List<MT503_SequenceC> SequenceCList { get; set; }
        /// <summary>
        /// Additional Information
        /// <summary>
		public MT503_SequenceD SequenceD { get; set; }

        public MT503()
        {
        }

        public MT503(SwiftTagList tags)
        {
            SetBlock4Tags(tags);
        }

        public virtual SwiftTagList GetBlock4Tags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (SequenceA != null)
                tags.AddRange(SequenceA.GetTags());
            if (SequenceB != null)
                tags.AddRange(SequenceB.GetTags());
            if (SequenceCList != null)
                tags.AddRange(SequenceCList.SelectMany(x => x.GetTags()).ToList());
            if (SequenceD != null)
                tags.AddRange(SequenceD.GetTags());
            return tags;
        }

        public virtual void SetBlock4Tags(SwiftTagList tags)
        {
            SequenceA = MT503_SequenceA.GetMT503_SequenceA(tags);
            SequenceB = MT503_SequenceB.GetMT503_SequenceB(tags);
            SequenceCList = MT503_SequenceC.GetMT503_SequenceCList(tags);
            SequenceD = MT503_SequenceD.GetMT503_SequenceD(tags);
        }

        public static MT503 Parse(string message)
        {
            SwiftMessage swiftMessage = new SwiftParser().GetSwiftMessage(message);
            MT503 result = new MT503()
            {
                Block1 = swiftMessage.Block1,
                Block2 = swiftMessage.Block2,
                Block3 = swiftMessage.Block3,
                Block4 = swiftMessage.Block4,
                Block5 = swiftMessage.Block5,
            };
            return result;
        }

        public static string Write(MT503 message)
        {
            return new SwiftWriter().GetFinMessage(message);
        }
    }

    /// <summary>
    /// General Information
    /// <summary>
    public partial class MT503_SequenceA
    {

        public static readonly string Tag16R_StartOfBlock_Value = "GENL";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public List<string> Tag20C_Reference { get; set; }
        /// <summary>
        /// Function of the Message
        /// <summary>
		public string Tag23G_FunctionOfTheMessage { get; set; }
        /// <summary>
        /// Agreement
        /// <summary>
		public List<MT503_SequenceA1> SequenceA1List { get; set; }
        /// <summary>
        /// Preparation Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Preparation Date/Time
        /// <summary>
		public string Tag98C_DateTime { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22H_Indicator { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Trade Date/Time
        /// <summary>
		public List<string> Tag98E_DateTime { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95Q_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party Contact Narrative
        /// <summary>
		public string Tag70C_Narrative { get; set; }
        /// <summary>
        /// Linkages
        /// <summary>
		public List<MT503_SequenceA2> SequenceA2List { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "GENL";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceA()
        {
        }

        public MT503_SequenceA(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag20C_Reference != null)
                tags.AddRange(Tag20C_Reference.Select(x => new SwiftTag("20C", x)).ToList());
            if (Tag23G_FunctionOfTheMessage != null)
                tags.Add(new SwiftTag("23G", Tag23G_FunctionOfTheMessage));
            if (SequenceA1List != null)
                tags.AddRange(SequenceA1List.SelectMany(x => x.GetTags()).ToList());
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag98C_DateTime != null)
                tags.Add(new SwiftTag("98C", Tag98C_DateTime));
            if (Tag22H_Indicator != null)
                tags.AddRange(Tag22H_Indicator.Select(x => new SwiftTag("22H", x)).ToList());
            if (Tag22F_Indicator != null)
                tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
            if (Tag98E_DateTime != null)
                tags.AddRange(Tag98E_DateTime.Select(x => new SwiftTag("98E", x)).ToList());
            if (Tag95P_Party != null)
                tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
            if (Tag95Q_Party != null)
                tags.AddRange(Tag95Q_Party.Select(x => new SwiftTag("95Q", x)).ToList());
            if (Tag95R_Party != null)
                tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
            if (Tag70C_Narrative != null)
                tags.Add(new SwiftTag("70C", Tag70C_Narrative));
            if (SequenceA2List != null)
                tags.AddRange(SequenceA2List.SelectMany(x => x.GetTags()).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "20C") && (i <= 2))
                {
                    if (Tag20C_Reference == null)
                        Tag20C_Reference = new List<string>();
                    Tag20C_Reference.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "23G") && (i <= 3))
                {
                    Tag23G_FunctionOfTheMessage = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "98C") && (i <= 4))
                {
                    Tag98C_DateTime = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "22H") && (i <= 5))
                {
                    if (Tag22H_Indicator == null)
                        Tag22H_Indicator = new List<string>();
                    Tag22H_Indicator.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "22F") && (i <= 5))
                {
                    if (Tag22F_Indicator == null)
                        Tag22F_Indicator = new List<string>();
                    Tag22F_Indicator.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "98E") && (i <= 5))
                {
                    if (Tag98E_DateTime == null)
                        Tag98E_DateTime = new List<string>();
                    Tag98E_DateTime.Add(tag.Value);
                    i = 5;
                }
                else if ((tag.Name == "95P") && (i <= 6))
                {
                    if (Tag95P_Party == null)
                        Tag95P_Party = new List<string>();
                    Tag95P_Party.Add(tag.Value);
                    i = 6;
                }
                else if ((tag.Name == "95Q") && (i <= 6))
                {
                    if (Tag95Q_Party == null)
                        Tag95Q_Party = new List<string>();
                    Tag95Q_Party.Add(tag.Value);
                    i = 6;
                }
                else if ((tag.Name == "95R") && (i <= 6))
                {
                    if (Tag95R_Party == null)
                        Tag95R_Party = new List<string>();
                    Tag95R_Party.Add(tag.Value);
                    i = 6;
                }
                else if ((tag.Name == "70C") && (i <= 7))
                {
                    Tag70C_Narrative = tag.Value;
                    i = 7;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 8))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 8;
                }
            }
            SequenceA1List = MT503_SequenceA1.GetMT503_SequenceA1List(tags);
            SequenceA2List = MT503_SequenceA2.GetMT503_SequenceA2List(tags);
        }

        public static MT503_SequenceA GetMT503_SequenceA(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceA.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceA.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceA(subBlock);
        }
    }

    /// <summary>
    /// Agreement
    /// <summary>
    public partial class MT503_SequenceA1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "AGRE";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Agreement Indicator
        /// <summary>
		public string Tag22F_Indicator { get; set; }
        /// <summary>
        /// Agreement Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Agreement Version Number
        /// <summary>
		public string Tag13B_Number { get; set; }
        /// <summary>
        /// Agreement Narrative
        /// <summary>
		public string Tag70C_Narrative { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "AGRE";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceA1()
        {
        }

        public MT503_SequenceA1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag22F_Indicator != null)
                tags.Add(new SwiftTag("22F", Tag22F_Indicator));
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag13B_Number != null)
                tags.Add(new SwiftTag("13B", Tag13B_Number));
            if (Tag70C_Narrative != null)
                tags.Add(new SwiftTag("70C", Tag70C_Narrative));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "22F") && (i <= 2))
                {
                    Tag22F_Indicator = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "98A") && (i <= 3))
                {
                    Tag98A_Date = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "13B") && (i <= 4))
                {
                    Tag13B_Number = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "70C") && (i <= 5))
                {
                    Tag70C_Narrative = tag.Value;
                    i = 5;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 6))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 6;
                }
            }
        }

        public static List<MT503_SequenceA1> GetMT503_SequenceA1List(SwiftTagList tags)
        {
            List<MT503_SequenceA1> result = new List<MT503_SequenceA1>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT503_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceA1.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT503_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceA1.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT503_SequenceA1 sequence = new MT503_SequenceA1(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }

    /// <summary>
    /// Linkages
    /// <summary>
    public partial class MT503_SequenceA2
    {

        public static readonly string Tag16R_StartOfBlock_Value = "LINK";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "LINK";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceA2()
        {
        }

        public MT503_SequenceA2(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag13A_NumberIdentification != null)
                tags.Add(new SwiftTag("13A", Tag13A_NumberIdentification));
            if (Tag13B_NumberIdentification != null)
                tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "13A") && (i <= 2))
                {
                    Tag13A_NumberIdentification = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "13B") && (i <= 2))
                {
                    Tag13B_NumberIdentification = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "20C") && (i <= 3))
                {
                    Tag20C_Reference = tag.Value;
                    i = 3;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 4;
                }
            }
        }

        public static List<MT503_SequenceA2> GetMT503_SequenceA2List(SwiftTagList tags)
        {
            List<MT503_SequenceA2> result = new List<MT503_SequenceA2>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT503_SequenceA2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceA2.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT503_SequenceA2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceA2.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT503_SequenceA2 sequence = new MT503_SequenceA2(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }

    /// <summary>
    /// Summary
    /// <summary>
    public partial class MT503_SequenceB
    {

        public static readonly string Tag16R_StartOfBlock_Value = "SUMM";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Exposed Party
        /// <summary>
		public string Tag95P_Party { get; set; }
        /// <summary>
        /// Exposed Party
        /// <summary>
		public string Tag95Q_Party { get; set; }
        /// <summary>
        /// Exposed Party
        /// <summary>
		public string Tag95R_Party { get; set; }
        /// <summary>
        /// Amount
        /// <summary>
		public List<string> Tag19B_Amount { get; set; }
        /// <summary>
        /// Summary Details
        /// <summary>
		public MT503_SequenceB1 SequenceB1 { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "SUMM";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceB()
        {
        }

        public MT503_SequenceB(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag95P_Party != null)
                tags.Add(new SwiftTag("95P", Tag95P_Party));
            if (Tag95Q_Party != null)
                tags.Add(new SwiftTag("95Q", Tag95Q_Party));
            if (Tag95R_Party != null)
                tags.Add(new SwiftTag("95R", Tag95R_Party));
            if (Tag19B_Amount != null)
                tags.AddRange(Tag19B_Amount.Select(x => new SwiftTag("19B", x)).ToList());
            if (SequenceB1 != null)
                tags.AddRange(SequenceB1.GetTags());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "95P") && (i <= 2))
                {
                    Tag95P_Party = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "95Q") && (i <= 2))
                {
                    Tag95Q_Party = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "95R") && (i <= 2))
                {
                    Tag95R_Party = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "19B") && (i <= 3))
                {
                    if (Tag19B_Amount == null)
                        Tag19B_Amount = new List<string>();
                    Tag19B_Amount.Add(tag.Value);
                    i = 3;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 4;
                }
            }
            SequenceB1 = MT503_SequenceB1.GetMT503_SequenceB1(tags);
        }

        public static MT503_SequenceB GetMT503_SequenceB(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceB.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceB.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceB(subBlock);
        }
    }

    /// <summary>
    /// Summary Details
    /// <summary>
    public partial class MT503_SequenceB1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "SUMD";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Amount
        /// <summary>
		public List<string> Tag19B_Amount { get; set; }
        /// <summary>
        /// Date 
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Date/Time
        /// <summary>
		public List<string> Tag98C_DateTime { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "SUMD";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceB1()
        {
        }

        public MT503_SequenceB1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag19B_Amount != null)
                tags.AddRange(Tag19B_Amount.Select(x => new SwiftTag("19B", x)).ToList());
            if (Tag98A_Date != null)
                tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
            if (Tag98C_DateTime != null)
                tags.AddRange(Tag98C_DateTime.Select(x => new SwiftTag("98C", x)).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "19B") && (i <= 2))
                {
                    if (Tag19B_Amount == null)
                        Tag19B_Amount = new List<string>();
                    Tag19B_Amount.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "98A") && (i <= 3))
                {
                    if (Tag98A_Date == null)
                        Tag98A_Date = new List<string>();
                    Tag98A_Date.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "98C") && (i <= 3))
                {
                    if (Tag98C_DateTime == null)
                        Tag98C_DateTime = new List<string>();
                    Tag98C_DateTime.Add(tag.Value);
                    i = 3;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 4;
                }
            }
        }

        public static MT503_SequenceB1 GetMT503_SequenceB1(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceB1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceB1.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceB1(subBlock);
        }
    }

    /// <summary>
    /// Collateral Details
    /// <summary>
    public partial class MT503_SequenceC
    {

        public static readonly string Tag16R_StartOfBlock_Value = "COLD";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Collateral Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22H_Indicator { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Settlement Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Securities Collateral Details
        /// <summary>
		public MT503_SequenceC1 SequenceC1 { get; set; }
        /// <summary>
        /// Cash Collateral Details
        /// <summary>
		public MT503_SequenceC2 SequenceC2 { get; set; }
        /// <summary>
        /// Other Collateral Details
        /// <summary>
		public MT503_SequenceC3 SequenceC3 { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "COLD";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceC()
        {
        }

        public MT503_SequenceC(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag20C_Reference != null)
                tags.Add(new SwiftTag("20C", Tag20C_Reference));
            if (Tag22H_Indicator != null)
                tags.AddRange(Tag22H_Indicator.Select(x => new SwiftTag("22H", x)).ToList());
            if (Tag22F_Indicator != null)
                tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (SequenceC1 != null)
                tags.AddRange(SequenceC1.GetTags());
            if (SequenceC2 != null)
                tags.AddRange(SequenceC2.GetTags());
            if (SequenceC3 != null)
                tags.AddRange(SequenceC3.GetTags());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "20C") && (i <= 2))
                {
                    Tag20C_Reference = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "22H") && (i <= 3))
                {
                    if (Tag22H_Indicator == null)
                        Tag22H_Indicator = new List<string>();
                    Tag22H_Indicator.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "22F") && (i <= 3))
                {
                    if (Tag22F_Indicator == null)
                        Tag22F_Indicator = new List<string>();
                    Tag22F_Indicator.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 5))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 5;
                }
            }
            SequenceC1 = MT503_SequenceC1.GetMT503_SequenceC1(tags);
            SequenceC2 = MT503_SequenceC2.GetMT503_SequenceC2(tags);
            SequenceC3 = MT503_SequenceC3.GetMT503_SequenceC3(tags);
        }

        public static List<MT503_SequenceC> GetMT503_SequenceCList(SwiftTagList tags)
        {
            List<MT503_SequenceC> result = new List<MT503_SequenceC>();
            List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT503_SequenceC.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceC.Tag16S_EndOfBlock_Value));
            foreach (var subBlock in subBlocks)
            {
                var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT503_SequenceC.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceC.Tag16S_EndOfBlock_Value));
                if (subTags.Count == 0) continue;
                MT503_SequenceC sequence = new MT503_SequenceC(subTags);
                result.Add(sequence);
            }
            return result;
        }
    }

    /// <summary>
    /// Securities Collateral Details
    /// <summary>
    public partial class MT503_SequenceC1
    {

        public static readonly string Tag16R_StartOfBlock_Value = "SCOL";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Identification Of The Financial Instrument
        /// <summary>
		public string Tag35B_IdentificationOfFinancialInstrument { get; set; }
        /// <summary>
        /// Quantity of Securities Collateral
        /// <summary>
		public string Tag36B_QuantityOfFinancialInstrument { get; set; }
        /// <summary>
        /// Ownership Flag
        /// <summary>
		public string Tag17B_Flag { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "SCOL";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceC1()
        {
        }

        public MT503_SequenceC1(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag35B_IdentificationOfFinancialInstrument != null)
                tags.Add(new SwiftTag("35B", Tag35B_IdentificationOfFinancialInstrument));
            if (Tag36B_QuantityOfFinancialInstrument != null)
                tags.Add(new SwiftTag("36B", Tag36B_QuantityOfFinancialInstrument));
            if (Tag17B_Flag != null)
                tags.Add(new SwiftTag("17B", Tag17B_Flag));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "35B") && (i <= 2))
                {
                    Tag35B_IdentificationOfFinancialInstrument = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "36B") && (i <= 3))
                {
                    Tag36B_QuantityOfFinancialInstrument = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "17B") && (i <= 4))
                {
                    Tag17B_Flag = tag.Value;
                    i = 4;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 5))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 5;
                }
            }
        }

        public static MT503_SequenceC1 GetMT503_SequenceC1(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceC1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceC1.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceC1(subBlock);
        }
    }

    /// <summary>
    /// Cash Collateral Details
    /// <summary>
    public partial class MT503_SequenceC2
    {

        public static readonly string Tag16R_StartOfBlock_Value = "CCOL";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Deposit Amount
        /// <summary>
		public string Tag19B_Amount { get; set; }
        /// <summary>
        /// Type of Deposit Indicator
        /// <summary>
		public string Tag22H_Indicator { get; set; }
        /// <summary>
        /// Maturity Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "CCOL";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceC2()
        {
        }

        public MT503_SequenceC2(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag19B_Amount != null)
                tags.Add(new SwiftTag("19B", Tag19B_Amount));
            if (Tag22H_Indicator != null)
                tags.Add(new SwiftTag("22H", Tag22H_Indicator));
            if (Tag98A_Date != null)
                tags.Add(new SwiftTag("98A", Tag98A_Date));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "19B") && (i <= 2))
                {
                    Tag19B_Amount = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "22H") && (i <= 3))
                {
                    Tag22H_Indicator = tag.Value;
                    i = 3;
                }
                else if ((tag.Name == "98A") && (i <= 4))
                {
                    Tag98A_Date = tag.Value;
                    i = 4;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 5))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 5;
                }
            }
        }

        public static MT503_SequenceC2 GetMT503_SequenceC2(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceC2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceC2.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceC2(subBlock);
        }
    }

    /// <summary>
    /// Other Collateral Details
    /// <summary>
    public partial class MT503_SequenceC3
    {

        public static readonly string Tag16R_StartOfBlock_Value = "BCOL";
        /// <summary>
        /// Start Of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Type of Other Collateral Indicator
        /// <summary>
		public string Tag22H_Indicator { get; set; }
        /// <summary>
        /// Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Date Code
        /// <summary>
		public List<string> Tag98B_DateCode { get; set; }
        /// <summary>
        /// Issuer
        /// <summary>
		public string Tag95P_Party { get; set; }
        /// <summary>
        /// Issuer
        /// <summary>
		public string Tag95Q_Party { get; set; }
        /// <summary>
        /// Issuer
        /// <summary>
		public string Tag95R_Party { get; set; }
        /// <summary>
        /// Amount
        /// <summary>
		public string Tag19B_Amount { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "BCOL";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceC3()
        {
        }

        public MT503_SequenceC3(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag22H_Indicator != null)
                tags.Add(new SwiftTag("22H", Tag22H_Indicator));
            if (Tag98A_Date != null)
                tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
            if (Tag98B_DateCode != null)
                tags.AddRange(Tag98B_DateCode.Select(x => new SwiftTag("98B", x)).ToList());
            if (Tag95P_Party != null)
                tags.Add(new SwiftTag("95P", Tag95P_Party));
            if (Tag95Q_Party != null)
                tags.Add(new SwiftTag("95Q", Tag95Q_Party));
            if (Tag95R_Party != null)
                tags.Add(new SwiftTag("95R", Tag95R_Party));
            if (Tag19B_Amount != null)
                tags.Add(new SwiftTag("19B", Tag19B_Amount));
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "22H") && (i <= 2))
                {
                    Tag22H_Indicator = tag.Value;
                    i = 2;
                }
                else if ((tag.Name == "98A") && (i <= 3))
                {
                    if (Tag98A_Date == null)
                        Tag98A_Date = new List<string>();
                    Tag98A_Date.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "98B") && (i <= 3))
                {
                    if (Tag98B_DateCode == null)
                        Tag98B_DateCode = new List<string>();
                    Tag98B_DateCode.Add(tag.Value);
                    i = 3;
                }
                else if ((tag.Name == "95P") && (i <= 4))
                {
                    Tag95P_Party = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "95Q") && (i <= 4))
                {
                    Tag95Q_Party = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "95R") && (i <= 4))
                {
                    Tag95R_Party = tag.Value;
                    i = 4;
                }
                else if ((tag.Name == "19B") && (i <= 5))
                {
                    Tag19B_Amount = tag.Value;
                    i = 5;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 6))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 6;
                }
            }
        }

        public static MT503_SequenceC3 GetMT503_SequenceC3(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceC3.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceC3.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceC3(subBlock);
        }
    }

    /// <summary>
    /// Additional Information
    /// <summary>
    public partial class MT503_SequenceD
    {

        public static readonly string Tag16R_StartOfBlock_Value = "ADDINFO";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95Q_Party { get; set; }
        public static readonly string Tag16S_EndOfBlock_Value = "ADDINFO";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }

        public MT503_SequenceD()
        {
        }

        public MT503_SequenceD(SwiftTagList tags)
        {
            SetTags(tags);
        }

        public virtual SwiftTagList GetTags()
        {
            SwiftTagList tags = new SwiftTagList();
            if (Tag16R_StartOfBlock != null)
                tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
            if (Tag95P_Party != null)
                tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
            if (Tag95R_Party != null)
                tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
            if (Tag95Q_Party != null)
                tags.AddRange(Tag95Q_Party.Select(x => new SwiftTag("95Q", x)).ToList());
            if (Tag16S_EndOfBlock != null)
                tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
            return tags;
        }

        public virtual void SetTags(SwiftTagList tags)
        {
            int i = 0;
            foreach (SwiftTag tag in tags)
            {
                if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
                {
                    Tag16R_StartOfBlock = tag.Value;
                    i = 1;
                }
                else if ((tag.Name == "95P") && (i <= 2))
                {
                    if (Tag95P_Party == null)
                        Tag95P_Party = new List<string>();
                    Tag95P_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "95R") && (i <= 2))
                {
                    if (Tag95R_Party == null)
                        Tag95R_Party = new List<string>();
                    Tag95R_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag.Name == "95Q") && (i <= 2))
                {
                    if (Tag95Q_Party == null)
                        Tag95Q_Party = new List<string>();
                    Tag95Q_Party.Add(tag.Value);
                    i = 2;
                }
                else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 3))
                {
                    Tag16S_EndOfBlock = tag.Value;
                    i = 3;
                }
            }
        }

        public static MT503_SequenceD GetMT503_SequenceD(SwiftTagList tags)
        {
            SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT503_SequenceD.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT503_SequenceD.Tag16S_EndOfBlock_Value));
            return new MT503_SequenceD(subBlock);
        }
    }
}
