//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Swift.Net.Mt.Category5
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    /// <summary>
    /// MT538 (SRG 2019)
    /// <summary>
    public partial class MT538 : SwiftMessage
    {
        
		public override SwiftBlock4 Block4 { get => new SwiftBlock4(GetBlock4Tags()); set => SetBlock4Tags(value); }

        /// <summary>
        /// General Information
        /// <summary>
		public MT538_SequenceA SequenceA { get; set; }
        /// <summary>
        /// Financial Instrument
        /// <summary>
		public List<MT538_SequenceB> SequenceBList { get; set; }
        /// <summary>
        /// Additional Information
        /// <summary>
		public MT538_SequenceC SequenceC { get; set; }
        
        public MT538()
        {
        }
        
        public MT538(SwiftTagList tags)
        {
			SetBlock4Tags(tags);
        }
        
        public virtual SwiftTagList GetBlock4Tags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (SequenceA != null)
				tags.AddRange(SequenceA.GetTags());
			if (SequenceBList != null)
				tags.AddRange(SequenceBList.SelectMany(x => x.GetTags()).ToList());
			if (SequenceC != null)
				tags.AddRange(SequenceC.GetTags());
			return tags;
        }
        
        public virtual void SetBlock4Tags(SwiftTagList tags)
        {
			SequenceA = MT538_SequenceA.GetMT538_SequenceA(tags);
			SequenceBList = MT538_SequenceB.GetMT538_SequenceBList(tags);
			SequenceC = MT538_SequenceC.GetMT538_SequenceC(tags);
        }
        
        public static MT538 Parse(string message)
        {
			SwiftMessage swiftMessage = new SwiftParser().GetSwiftMessage(message);
			MT538 result = new MT538()
			{
				Block1 = swiftMessage.Block1,
				Block2 = swiftMessage.Block2,
				Block3 = swiftMessage.Block3,
				Block4 = swiftMessage.Block4,
				Block5 = swiftMessage.Block5,
			};
			return result;
        }
        
        public static string Write(MT538 message)
        {
			return new SwiftWriter().GetFinMessage(message);
        }
    }
    
    /// <summary>
    /// General Information
    /// <summary>
    public partial class MT538_SequenceA
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "GENL";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Page Number/Continuation Indicator
        /// <summary>
		public string Tag28E_PageNumberContinuationIndicator { get; set; }
        /// <summary>
        /// Statement Number
        /// <summary>
		public string Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Statement Number
        /// <summary>
		public string Tag13J_NumberIdentification { get; set; }
        /// <summary>
        /// Sender’s Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
        /// <summary>
        /// Function of the Message
        /// <summary>
		public string Tag23G_FunctionOfTheMessage { get; set; }
        /// <summary>
        /// Preparation Date
        /// <summary>
		public string Tag98A_Date { get; set; }
        /// <summary>
        /// Preparation Date/Time
        /// <summary>
		public string Tag98C_DateTime { get; set; }
        /// <summary>
        /// Trade Date/Time
        /// <summary>
		public string Tag98E_DateTime { get; set; }
        /// <summary>
        /// Statement Period
        /// <summary>
		public string Tag69A_Period { get; set; }
        /// <summary>
        /// Statement Period
        /// <summary>
		public string Tag69B_Period { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Linkages
        /// <summary>
		public List<MT538_SequenceA1> SequenceA1List { get; set; }
        /// <summary>
        /// Account Owner
        /// <summary>
		public string Tag95P_Party { get; set; }
        /// <summary>
        /// Account Owner
        /// <summary>
		public string Tag95R_Party { get; set; }
        /// <summary>
        /// Safekeeping Account
        /// <summary>
		public string Tag97A_Account { get; set; }
        /// <summary>
        /// Safekeeping Account
        /// <summary>
		public string Tag97B_Account { get; set; }
        /// <summary>
        /// Activity Flag
        /// <summary>
		public string Tag17B_Flag { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "GENL";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceA()
        {
        }
        
        public MT538_SequenceA(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag28E_PageNumberContinuationIndicator != null)
				tags.Add(new SwiftTag("28E", Tag28E_PageNumberContinuationIndicator));
			if (Tag13A_NumberIdentification != null)
				tags.Add(new SwiftTag("13A", Tag13A_NumberIdentification));
			if (Tag13J_NumberIdentification != null)
				tags.Add(new SwiftTag("13J", Tag13J_NumberIdentification));
			if (Tag20C_Reference != null)
				tags.Add(new SwiftTag("20C", Tag20C_Reference));
			if (Tag23G_FunctionOfTheMessage != null)
				tags.Add(new SwiftTag("23G", Tag23G_FunctionOfTheMessage));
			if (Tag98A_Date != null)
				tags.Add(new SwiftTag("98A", Tag98A_Date));
			if (Tag98C_DateTime != null)
				tags.Add(new SwiftTag("98C", Tag98C_DateTime));
			if (Tag98E_DateTime != null)
				tags.Add(new SwiftTag("98E", Tag98E_DateTime));
			if (Tag69A_Period != null)
				tags.Add(new SwiftTag("69A", Tag69A_Period));
			if (Tag69B_Period != null)
				tags.Add(new SwiftTag("69B", Tag69B_Period));
			if (Tag22F_Indicator != null)
				tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
			if (SequenceA1List != null)
				tags.AddRange(SequenceA1List.SelectMany(x => x.GetTags()).ToList());
			if (Tag95P_Party != null)
				tags.Add(new SwiftTag("95P", Tag95P_Party));
			if (Tag95R_Party != null)
				tags.Add(new SwiftTag("95R", Tag95R_Party));
			if (Tag97A_Account != null)
				tags.Add(new SwiftTag("97A", Tag97A_Account));
			if (Tag97B_Account != null)
				tags.Add(new SwiftTag("97B", Tag97B_Account));
			if (Tag17B_Flag != null)
				tags.Add(new SwiftTag("17B", Tag17B_Flag));
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "28E") && (i <= 2))
				{
					Tag28E_PageNumberContinuationIndicator = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "13A") && (i <= 3))
				{
					Tag13A_NumberIdentification = tag.Value;
					i = 3;
				}
				else if ((tag.Name == "13J") && (i <= 3))
				{
					Tag13J_NumberIdentification = tag.Value;
					i = 3;
				}
				else if ((tag.Name == "20C") && (i <= 4))
				{
					Tag20C_Reference = tag.Value;
					i = 4;
				}
				else if ((tag.Name == "23G") && (i <= 5))
				{
					Tag23G_FunctionOfTheMessage = tag.Value;
					i = 5;
				}
				else if ((tag.Name == "98A") && (i <= 6))
				{
					Tag98A_Date = tag.Value;
					i = 6;
				}
				else if ((tag.Name == "98C") && (i <= 6))
				{
					Tag98C_DateTime = tag.Value;
					i = 6;
				}
				else if ((tag.Name == "98E") && (i <= 6))
				{
					Tag98E_DateTime = tag.Value;
					i = 6;
				}
				else if ((tag.Name == "69A") && (i <= 7))
				{
					Tag69A_Period = tag.Value;
					i = 7;
				}
				else if ((tag.Name == "69B") && (i <= 7))
				{
					Tag69B_Period = tag.Value;
					i = 7;
				}
				else if ((tag.Name == "22F") && (i <= 8))
				{
					if (Tag22F_Indicator == null)
						Tag22F_Indicator = new List<string>();
					Tag22F_Indicator.Add(tag.Value);
					i = 8;
				}
				else if ((tag.Name == "95P") && (i <= 9))
				{
					Tag95P_Party = tag.Value;
					i = 9;
				}
				else if ((tag.Name == "95R") && (i <= 9))
				{
					Tag95R_Party = tag.Value;
					i = 9;
				}
				else if ((tag.Name == "97A") && (i <= 10))
				{
					Tag97A_Account = tag.Value;
					i = 10;
				}
				else if ((tag.Name == "97B") && (i <= 10))
				{
					Tag97B_Account = tag.Value;
					i = 10;
				}
				else if ((tag.Name == "17B") && (i <= 11))
				{
					Tag17B_Flag = tag.Value;
					i = 11;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 12))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 12;
				}
			}
			SequenceA1List = MT538_SequenceA1.GetMT538_SequenceA1List(tags);
        }
        
        public static MT538_SequenceA GetMT538_SequenceA(SwiftTagList tags)
        {
			SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT538_SequenceA.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceA.Tag16S_EndOfBlock_Value));
			return new MT538_SequenceA(subBlock);
        }
    }
    
    /// <summary>
    /// Linkages
    /// <summary>
    public partial class MT538_SequenceA1
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "LINK";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "LINK";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceA1()
        {
        }
        
        public MT538_SequenceA1(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag13A_NumberIdentification != null)
				tags.Add(new SwiftTag("13A", Tag13A_NumberIdentification));
			if (Tag13B_NumberIdentification != null)
				tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
			if (Tag20C_Reference != null)
				tags.Add(new SwiftTag("20C", Tag20C_Reference));
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "13A") && (i <= 2))
				{
					Tag13A_NumberIdentification = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "13B") && (i <= 2))
				{
					Tag13B_NumberIdentification = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "20C") && (i <= 3))
				{
					Tag20C_Reference = tag.Value;
					i = 3;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 4;
				}
			}
        }
        
        public static List<MT538_SequenceA1> GetMT538_SequenceA1List(SwiftTagList tags)
        {
			List<MT538_SequenceA1> result = new List<MT538_SequenceA1>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceA1.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceA1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceA1.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceA1 sequence = new MT538_SequenceA1(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Financial Instrument
    /// <summary>
    public partial class MT538_SequenceB
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "FIN";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Identification of the Financial Instrument
        /// <summary>
		public string Tag35B_IdentificationOfFinancialInstrument { get; set; }
        /// <summary>
        /// Sub-safekeeping Account
        /// <summary>
		public List<MT538_SequenceB1> SequenceB1List { get; set; }
        /// <summary>
        /// Sub-Balance
        /// <summary>
		public List<MT538_SequenceB2> SequenceB2List { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "FIN";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceB()
        {
        }
        
        public MT538_SequenceB(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag35B_IdentificationOfFinancialInstrument != null)
				tags.Add(new SwiftTag("35B", Tag35B_IdentificationOfFinancialInstrument));
			if (SequenceB1List != null)
				tags.AddRange(SequenceB1List.SelectMany(x => x.GetTags()).ToList());
			if (SequenceB2List != null)
				tags.AddRange(SequenceB2List.SelectMany(x => x.GetTags()).ToList());
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "35B") && (i <= 2))
				{
					Tag35B_IdentificationOfFinancialInstrument = tag.Value;
					i = 2;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 3))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 3;
				}
			}
			SequenceB1List = MT538_SequenceB1.GetMT538_SequenceB1List(tags);
			SequenceB2List = MT538_SequenceB2.GetMT538_SequenceB2List(tags);
        }
        
        public static List<MT538_SequenceB> GetMT538_SequenceBList(SwiftTagList tags)
        {
			List<MT538_SequenceB> result = new List<MT538_SequenceB>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceB.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceB.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceB sequence = new MT538_SequenceB(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Sub-safekeeping Account
    /// <summary>
    public partial class MT538_SequenceB1
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "FIA";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Place of Listing
        /// <summary>
		public string Tag94B_Place { get; set; }
        /// <summary>
        /// Indicator
        /// <summary>
		public List<string> Tag22F_Indicator { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12A_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12C_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Type of Financial Instrument
        /// <summary>
		public List<string> Tag12B_TypeOfFinancialInstrument { get; set; }
        /// <summary>
        /// Currency Of Denomination
        /// <summary>
		public List<string> Tag11A_CurrencyOfDenomination { get; set; }
        /// <summary>
        /// Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Rate
        /// <summary>
		public List<string> Tag92A_Rate { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13A_NumberIdentification { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public List<string> Tag13K_NumberIdentification { get; set; }
        /// <summary>
        /// Flag
        /// <summary>
		public List<string> Tag17B_Flag { get; set; }
        /// <summary>
        /// Price
        /// <summary>
		public List<string> Tag90A_Price { get; set; }
        /// <summary>
        /// Deal Price
        /// <summary>
		public List<string> Tag90B_Price { get; set; }
        /// <summary>
        /// Quantity Of Financial Instrument
        /// <summary>
		public List<string> Tag36B_QuantityOfFinancialInstrument { get; set; }
        /// <summary>
        /// Identification of the Financial Instrument
        /// <summary>
		public List<string> Tag35B_IdentificationOfFinancialInstrument { get; set; }
        /// <summary>
        /// Financial Instrument Attribute Narrative
        /// <summary>
		public string Tag70E_Narrative { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "FIA";
        /// <summary>
        /// End Of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceB1()
        {
        }
        
        public MT538_SequenceB1(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag94B_Place != null)
				tags.Add(new SwiftTag("94B", Tag94B_Place));
			if (Tag22F_Indicator != null)
				tags.AddRange(Tag22F_Indicator.Select(x => new SwiftTag("22F", x)).ToList());
			if (Tag12A_TypeOfFinancialInstrument != null)
				tags.AddRange(Tag12A_TypeOfFinancialInstrument.Select(x => new SwiftTag("12A", x)).ToList());
			if (Tag12C_TypeOfFinancialInstrument != null)
				tags.AddRange(Tag12C_TypeOfFinancialInstrument.Select(x => new SwiftTag("12C", x)).ToList());
			if (Tag12B_TypeOfFinancialInstrument != null)
				tags.AddRange(Tag12B_TypeOfFinancialInstrument.Select(x => new SwiftTag("12B", x)).ToList());
			if (Tag11A_CurrencyOfDenomination != null)
				tags.AddRange(Tag11A_CurrencyOfDenomination.Select(x => new SwiftTag("11A", x)).ToList());
			if (Tag98A_Date != null)
				tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
			if (Tag92A_Rate != null)
				tags.AddRange(Tag92A_Rate.Select(x => new SwiftTag("92A", x)).ToList());
			if (Tag13A_NumberIdentification != null)
				tags.AddRange(Tag13A_NumberIdentification.Select(x => new SwiftTag("13A", x)).ToList());
			if (Tag13B_NumberIdentification != null)
				tags.AddRange(Tag13B_NumberIdentification.Select(x => new SwiftTag("13B", x)).ToList());
			if (Tag13K_NumberIdentification != null)
				tags.AddRange(Tag13K_NumberIdentification.Select(x => new SwiftTag("13K", x)).ToList());
			if (Tag17B_Flag != null)
				tags.AddRange(Tag17B_Flag.Select(x => new SwiftTag("17B", x)).ToList());
			if (Tag90A_Price != null)
				tags.AddRange(Tag90A_Price.Select(x => new SwiftTag("90A", x)).ToList());
			if (Tag90B_Price != null)
				tags.AddRange(Tag90B_Price.Select(x => new SwiftTag("90B", x)).ToList());
			if (Tag36B_QuantityOfFinancialInstrument != null)
				tags.AddRange(Tag36B_QuantityOfFinancialInstrument.Select(x => new SwiftTag("36B", x)).ToList());
			if (Tag35B_IdentificationOfFinancialInstrument != null)
				tags.AddRange(Tag35B_IdentificationOfFinancialInstrument.Select(x => new SwiftTag("35B", x)).ToList());
			if (Tag70E_Narrative != null)
				tags.Add(new SwiftTag("70E", Tag70E_Narrative));
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "94B") && (i <= 2))
				{
					Tag94B_Place = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "22F") && (i <= 3))
				{
					if (Tag22F_Indicator == null)
						Tag22F_Indicator = new List<string>();
					Tag22F_Indicator.Add(tag.Value);
					i = 3;
				}
				else if ((tag.Name == "12A") && (i <= 4))
				{
					if (Tag12A_TypeOfFinancialInstrument == null)
						Tag12A_TypeOfFinancialInstrument = new List<string>();
					Tag12A_TypeOfFinancialInstrument.Add(tag.Value);
					i = 4;
				}
				else if ((tag.Name == "12C") && (i <= 4))
				{
					if (Tag12C_TypeOfFinancialInstrument == null)
						Tag12C_TypeOfFinancialInstrument = new List<string>();
					Tag12C_TypeOfFinancialInstrument.Add(tag.Value);
					i = 4;
				}
				else if ((tag.Name == "12B") && (i <= 4))
				{
					if (Tag12B_TypeOfFinancialInstrument == null)
						Tag12B_TypeOfFinancialInstrument = new List<string>();
					Tag12B_TypeOfFinancialInstrument.Add(tag.Value);
					i = 4;
				}
				else if ((tag.Name == "11A") && (i <= 5))
				{
					if (Tag11A_CurrencyOfDenomination == null)
						Tag11A_CurrencyOfDenomination = new List<string>();
					Tag11A_CurrencyOfDenomination.Add(tag.Value);
					i = 5;
				}
				else if ((tag.Name == "98A") && (i <= 6))
				{
					if (Tag98A_Date == null)
						Tag98A_Date = new List<string>();
					Tag98A_Date.Add(tag.Value);
					i = 6;
				}
				else if ((tag.Name == "92A") && (i <= 7))
				{
					if (Tag92A_Rate == null)
						Tag92A_Rate = new List<string>();
					Tag92A_Rate.Add(tag.Value);
					i = 7;
				}
				else if ((tag.Name == "13A") && (i <= 8))
				{
					if (Tag13A_NumberIdentification == null)
						Tag13A_NumberIdentification = new List<string>();
					Tag13A_NumberIdentification.Add(tag.Value);
					i = 8;
				}
				else if ((tag.Name == "13B") && (i <= 8))
				{
					if (Tag13B_NumberIdentification == null)
						Tag13B_NumberIdentification = new List<string>();
					Tag13B_NumberIdentification.Add(tag.Value);
					i = 8;
				}
				else if ((tag.Name == "13K") && (i <= 8))
				{
					if (Tag13K_NumberIdentification == null)
						Tag13K_NumberIdentification = new List<string>();
					Tag13K_NumberIdentification.Add(tag.Value);
					i = 8;
				}
				else if ((tag.Name == "17B") && (i <= 9))
				{
					if (Tag17B_Flag == null)
						Tag17B_Flag = new List<string>();
					Tag17B_Flag.Add(tag.Value);
					i = 9;
				}
				else if ((tag.Name == "90A") && (i <= 10))
				{
					if (Tag90A_Price == null)
						Tag90A_Price = new List<string>();
					Tag90A_Price.Add(tag.Value);
					i = 10;
				}
				else if ((tag.Name == "90B") && (i <= 10))
				{
					if (Tag90B_Price == null)
						Tag90B_Price = new List<string>();
					Tag90B_Price.Add(tag.Value);
					i = 10;
				}
				else if ((tag.Name == "36B") && (i <= 11))
				{
					if (Tag36B_QuantityOfFinancialInstrument == null)
						Tag36B_QuantityOfFinancialInstrument = new List<string>();
					Tag36B_QuantityOfFinancialInstrument.Add(tag.Value);
					i = 11;
				}
				else if ((tag.Name == "35B") && (i <= 12))
				{
					if (Tag35B_IdentificationOfFinancialInstrument == null)
						Tag35B_IdentificationOfFinancialInstrument = new List<string>();
					Tag35B_IdentificationOfFinancialInstrument.Add(tag.Value);
					i = 12;
				}
				else if ((tag.Name == "70E") && (i <= 13))
				{
					Tag70E_Narrative = tag.Value;
					i = 13;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 14))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 14;
				}
			}
        }
        
        public static List<MT538_SequenceB1> GetMT538_SequenceB1List(SwiftTagList tags)
        {
			List<MT538_SequenceB1> result = new List<MT538_SequenceB1>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceB1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB1.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceB1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB1.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceB1 sequence = new MT538_SequenceB1(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Sub-Balance
    /// <summary>
    public partial class MT538_SequenceB2
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "SUBBAL";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Place of Trade
        /// <summary>
		public string Tag94B_Place { get; set; }
        /// <summary>
        /// Place of Safekeeping
        /// <summary>
		public string Tag94C_Place { get; set; }
        /// <summary>
        /// Place of Safekeeping
        /// <summary>
		public string Tag94F_Place { get; set; }
        /// <summary>
        /// Balance From
        /// <summary>
		public string Tag93A_Balance { get; set; }
        /// <summary>
        /// Intra-Position Movement
        /// <summary>
		public List<MT538_SequenceB2a> SequenceB2aList { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "SUBBAL";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceB2()
        {
        }
        
        public MT538_SequenceB2(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag94B_Place != null)
				tags.Add(new SwiftTag("94B", Tag94B_Place));
			if (Tag94C_Place != null)
				tags.Add(new SwiftTag("94C", Tag94C_Place));
			if (Tag94F_Place != null)
				tags.Add(new SwiftTag("94F", Tag94F_Place));
			if (Tag93A_Balance != null)
				tags.Add(new SwiftTag("93A", Tag93A_Balance));
			if (SequenceB2aList != null)
				tags.AddRange(SequenceB2aList.SelectMany(x => x.GetTags()).ToList());
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "94B") && (i <= 2))
				{
					Tag94B_Place = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "94C") && (i <= 2))
				{
					Tag94C_Place = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "94F") && (i <= 2))
				{
					Tag94F_Place = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "93A") && (i <= 3))
				{
					Tag93A_Balance = tag.Value;
					i = 3;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 4;
				}
			}
			SequenceB2aList = MT538_SequenceB2a.GetMT538_SequenceB2aList(tags);
        }
        
        public static List<MT538_SequenceB2> GetMT538_SequenceB2List(SwiftTagList tags)
        {
			List<MT538_SequenceB2> result = new List<MT538_SequenceB2>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceB2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceB2.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceB2 sequence = new MT538_SequenceB2(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Intra-Position Movement
    /// <summary>
    public partial class MT538_SequenceB2a
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "INPOS";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linkages
        /// <summary>
		public List<MT538_SequenceB2a1> SequenceB2a1List { get; set; }
        /// <summary>
        /// Quantity of Financial Instrument Settled
        /// <summary>
		public string Tag36B_QuantityOfFinancialInstrument { get; set; }
        /// <summary>
        /// Number Identification
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Settlement Amount
        /// <summary>
		public string Tag19A_Amount { get; set; }
        /// <summary>
        /// Balance To
        /// <summary>
		public string Tag93A_Balance { get; set; }
        /// <summary>
        /// Price Quotation Date
        /// <summary>
		public List<string> Tag98A_Date { get; set; }
        /// <summary>
        /// Price Quotation Date/Time
        /// <summary>
		public List<string> Tag98C_DateTime { get; set; }
        /// <summary>
        /// Corporate Action Event Indicator 
        /// <summary>
		public string Tag22F_Indicator { get; set; }
        /// <summary>
        /// Settlement Instruction Processing Narrative
        /// <summary>
		public string Tag70E_Narrative { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "INPOS";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceB2a()
        {
        }
        
        public MT538_SequenceB2a(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (SequenceB2a1List != null)
				tags.AddRange(SequenceB2a1List.SelectMany(x => x.GetTags()).ToList());
			if (Tag36B_QuantityOfFinancialInstrument != null)
				tags.Add(new SwiftTag("36B", Tag36B_QuantityOfFinancialInstrument));
			if (Tag13B_NumberIdentification != null)
				tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
			if (Tag19A_Amount != null)
				tags.Add(new SwiftTag("19A", Tag19A_Amount));
			if (Tag93A_Balance != null)
				tags.Add(new SwiftTag("93A", Tag93A_Balance));
			if (Tag98A_Date != null)
				tags.AddRange(Tag98A_Date.Select(x => new SwiftTag("98A", x)).ToList());
			if (Tag98C_DateTime != null)
				tags.AddRange(Tag98C_DateTime.Select(x => new SwiftTag("98C", x)).ToList());
			if (Tag22F_Indicator != null)
				tags.Add(new SwiftTag("22F", Tag22F_Indicator));
			if (Tag70E_Narrative != null)
				tags.Add(new SwiftTag("70E", Tag70E_Narrative));
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "36B") && (i <= 2))
				{
					Tag36B_QuantityOfFinancialInstrument = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "13B") && (i <= 3))
				{
					Tag13B_NumberIdentification = tag.Value;
					i = 3;
				}
				else if ((tag.Name == "19A") && (i <= 4))
				{
					Tag19A_Amount = tag.Value;
					i = 4;
				}
				else if ((tag.Name == "93A") && (i <= 5))
				{
					Tag93A_Balance = tag.Value;
					i = 5;
				}
				else if ((tag.Name == "98A") && (i <= 6))
				{
					if (Tag98A_Date == null)
						Tag98A_Date = new List<string>();
					Tag98A_Date.Add(tag.Value);
					i = 6;
				}
				else if ((tag.Name == "98C") && (i <= 6))
				{
					if (Tag98C_DateTime == null)
						Tag98C_DateTime = new List<string>();
					Tag98C_DateTime.Add(tag.Value);
					i = 6;
				}
				else if ((tag.Name == "22F") && (i <= 7))
				{
					Tag22F_Indicator = tag.Value;
					i = 7;
				}
				else if ((tag.Name == "70E") && (i <= 8))
				{
					Tag70E_Narrative = tag.Value;
					i = 8;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 9))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 9;
				}
			}
			SequenceB2a1List = MT538_SequenceB2a1.GetMT538_SequenceB2a1List(tags);
        }
        
        public static List<MT538_SequenceB2a> GetMT538_SequenceB2aList(SwiftTagList tags)
        {
			List<MT538_SequenceB2a> result = new List<MT538_SequenceB2a>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceB2a.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2a.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceB2a.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2a.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceB2a sequence = new MT538_SequenceB2a(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Linkages
    /// <summary>
    public partial class MT538_SequenceB2a1
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "LINK";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13A_NNumberIdentification { get; set; }
        /// <summary>
        /// Linked Message
        /// <summary>
		public string Tag13B_NumberIdentification { get; set; }
        /// <summary>
        /// Reference
        /// <summary>
		public string Tag20C_Reference { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "LINK";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceB2a1()
        {
        }
        
        public MT538_SequenceB2a1(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag13A_NNumberIdentification != null)
				tags.Add(new SwiftTag("13A", Tag13A_NNumberIdentification));
			if (Tag13B_NumberIdentification != null)
				tags.Add(new SwiftTag("13B", Tag13B_NumberIdentification));
			if (Tag20C_Reference != null)
				tags.Add(new SwiftTag("20C", Tag20C_Reference));
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "13A") && (i <= 2))
				{
					Tag13A_NNumberIdentification = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "13B") && (i <= 2))
				{
					Tag13B_NumberIdentification = tag.Value;
					i = 2;
				}
				else if ((tag.Name == "20C") && (i <= 3))
				{
					Tag20C_Reference = tag.Value;
					i = 3;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 4))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 4;
				}
			}
        }
        
        public static List<MT538_SequenceB2a1> GetMT538_SequenceB2a1List(SwiftTagList tags)
        {
			List<MT538_SequenceB2a1> result = new List<MT538_SequenceB2a1>();
			List<SwiftTagList> subBlocks = tags.GetSubBlocks(new SwiftTag("16R", MT538_SequenceB2a1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2a1.Tag16S_EndOfBlock_Value));
			foreach(var subBlock in subBlocks)
			{
				var subTags = subBlock.GetSubBlock(new SwiftTag("16R", MT538_SequenceB2a1.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceB2a1.Tag16S_EndOfBlock_Value));
				if (subTags.Count == 0) continue;
				MT538_SequenceB2a1 sequence = new MT538_SequenceB2a1(subTags);
				result.Add(sequence);
			}
			return result;
        }
    }
    
    /// <summary>
    /// Additional Information
    /// <summary>
    public partial class MT538_SequenceC
    {
        
		public static readonly string Tag16R_StartOfBlock_Value = "ADDINFO";
        /// <summary>
        /// Start of Block
        /// <summary>
		public string Tag16R_StartOfBlock { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95P_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95R_Party { get; set; }
        /// <summary>
        /// Party
        /// <summary>
		public List<string> Tag95Q_Party { get; set; }
		public static readonly string Tag16S_EndOfBlock_Value = "ADDINFO";
        /// <summary>
        /// End of Block
        /// <summary>
		public string Tag16S_EndOfBlock { get; set; }
        
        public MT538_SequenceC()
        {
        }
        
        public MT538_SequenceC(SwiftTagList tags)
        {
			SetTags(tags);
        }
        
        public virtual SwiftTagList GetTags()
        {
			SwiftTagList tags = new SwiftTagList();
			if (Tag16R_StartOfBlock != null)
				tags.Add(new SwiftTag("16R", Tag16R_StartOfBlock));
			if (Tag95P_Party != null)
				tags.AddRange(Tag95P_Party.Select(x => new SwiftTag("95P", x)).ToList());
			if (Tag95R_Party != null)
				tags.AddRange(Tag95R_Party.Select(x => new SwiftTag("95R", x)).ToList());
			if (Tag95Q_Party != null)
				tags.AddRange(Tag95Q_Party.Select(x => new SwiftTag("95Q", x)).ToList());
			if (Tag16S_EndOfBlock != null)
				tags.Add(new SwiftTag("16S", Tag16S_EndOfBlock));
			return tags;
        }
        
        public virtual void SetTags(SwiftTagList tags)
        {
			int i = 0;
			foreach(SwiftTag tag in tags)
			{
				if ((tag == new SwiftTag("16R", Tag16R_StartOfBlock_Value)) && (i <= 1))
				{
					Tag16R_StartOfBlock = tag.Value;
					i = 1;
				}
				else if ((tag.Name == "95P") && (i <= 2))
				{
					if (Tag95P_Party == null)
						Tag95P_Party = new List<string>();
					Tag95P_Party.Add(tag.Value);
					i = 2;
				}
				else if ((tag.Name == "95R") && (i <= 2))
				{
					if (Tag95R_Party == null)
						Tag95R_Party = new List<string>();
					Tag95R_Party.Add(tag.Value);
					i = 2;
				}
				else if ((tag.Name == "95Q") && (i <= 2))
				{
					if (Tag95Q_Party == null)
						Tag95Q_Party = new List<string>();
					Tag95Q_Party.Add(tag.Value);
					i = 2;
				}
				else if ((tag == new SwiftTag("16S", Tag16S_EndOfBlock_Value)) && (i <= 3))
				{
					Tag16S_EndOfBlock = tag.Value;
					i = 3;
				}
			}
        }
        
        public static MT538_SequenceC GetMT538_SequenceC(SwiftTagList tags)
        {
			SwiftTagList subBlock = tags.GetSubBlock(new SwiftTag("16R", MT538_SequenceC.Tag16R_StartOfBlock_Value), new SwiftTag("16S", MT538_SequenceC.Tag16S_EndOfBlock_Value));
			return new MT538_SequenceC(subBlock);
        }
    }
}
